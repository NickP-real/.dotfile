# plugin
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# set -g default-shell /usr/bin/fish

# nvim color
set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",$TERM:RGB"
set -ag terminal-features ",$TERM:usstyle"
set -ag terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -ag terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0
# set -ga terminal-features ",alacritty:usstyle"

# set tmux to vi mode
set-window-option -g mode-keys vi

# vi yank
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# use C-a as prefix
unbind C-b
set -g prefix C-a
bind C-a send-prefix
bind a last-window

# source file
# bind r source-file ~/.config/tmux/tmux.conf \; display-message "Config reloaded..."

# Start windows index at 1
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set -g renumber-windows on

# smart-splits.nvim
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
resize_step=5

bind -n C-h if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind -n C-j if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind -n C-k if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind -n C-l if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

bind -n M-h if-shell "$is_vim" 'send-keys M-h' "resize-pane -L $resize_step"
bind -n M-j if-shell "$is_vim" 'send-keys M-j' "resize-pane -D $resize_step"
bind -n M-k if-shell "$is_vim" 'send-keys M-k' "resize-pane -U $resize_step"
bind -n M-l if-shell "$is_vim" 'send-keys M-l' "resize-pane -R $resize_step"

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind -T copy-mode-vi 'C-h' select-pane -L
bind -T copy-mode-vi 'C-j' select-pane -D
bind -T copy-mode-vi 'C-k' select-pane -U
bind -T copy-mode-vi 'C-l' select-pane -R

# resurrect
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-nvim 'session'
# set -g @resurrect-processes '"~pnpm dev->pnpm dev"'

# auto restore
set -g @continuum-restore 'on'
set -g @continuum-save-interval '5' # save every 5 mins
# set -g @continuum-boot 'on'

# join windows
bind j command-prompt -p "join pane from:" "join-pane -s '%%'"
bind S command-prompt -p "send pane to:" "join-pane -t '%%'"

# split/open new window in current dir
# bind c new-window -c "#{pane_current_path}"
bind '"' split-window -v -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# Easier and faster switching between next/prev window
bind C-p previous-window
bind C-n next-window

# enable mouse
set -g mouse on
set -g set-clipboard on

# windows key
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9

# sync panes in current window
bind -n M-0 setw synchronize-panes

# close without confirm
bind x kill-pane

# More friendly split pane
bind v split-window -v -c "#{pane_current_path}"
bind h split-window -h -c "#{pane_current_path}"

# popup
# bind -n M-f if-shell -F '#{==:#{session_name},popup}' {
#   detach-client
# } {
#   display-popup -E -d "#{pane_current_path}" "tmux new-session -A -s popup"
# }
bind -n M-f display-popup -h 80% -w 80% -E -d "#{pane_current_path}"
bind -n M-g display-popup -h 80% -w 90% -E -d "#{pane_current_path}" "env TERM=$TERM lazygit"

# status line
set -g status-position top
set -g status-style bg=default,fg=blue
set -g window-status-current-style bold
set -g status-right ""

run '~/.tmux/plugins/tpm/tpm'
